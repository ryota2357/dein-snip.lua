*dein-snip.txt*

Version : 0.1.0
Author  : ryota2357
License : MIT license

==============================================================================
CONTENTS						*dein-snip-contents*

Introduction			|dein-snip-introduction|
Functions			|dein-snip-functions|
Configuration			|dein-snip-config|
Changelog			|dein-snip-changelog|

==============================================================================
INTRODUCTION						*dein-snip-introduction*

The wrapper plugin of dein.vim (https://github.com/Shougo/dein.vim).

This plugin's goals are:
* Use dein's ecosystem.
* Less configuration.
* Write configuration with Lua.

If you want to customize dein's behavior or plugin loading settings in detail,
you should not use this plugin.
dein-snip limits dein's functionality to achieve less configuration.

==============================================================================
FUNCTIONS						*dein-snip-functions*

							*dein-snip.setup()*
setup({config})
		1. add dein.vim to runtimepath.
		   (If not downloaded dein.vim, automatically downloaded)
		2. apply {config} to dein.vim variable.
		3. call dein.vim functions based on {config}

		See |dein-snip-config| for what to set in {config}.

==============================================================================
CONFIGURATION						*dein-snip-config*

You can customize dein's and other plugin's download path by
|dein-snip-config-path|

To load toml or vim files, you can use |dein-snip-config-load|

You can also set the |dein-variables|.
Please see |dein-snip-config-dein-variables| or README.md

						*dein-snip-config-path*
path		(table)
		It can contain following keys.

		plugins		(string)
			plugin's downloaded path.

			Default: "~/.cache/dein"

		dein		(string)
			dein.vim install(ed) path.

			Default: "~/.cache/dein/repos/github.com/Shougo/dein.vim"

		init		(string)
			init.vim or init.lua path.

			Default: $MYVIMRC

						*dein-snip-config-load*
load		(table)
		Specify file path which you want dein.vim to load.
		It can contain following keys.

		vim		(list of string)
			It set to |g:dein#inline_vimrcs|
>
			vim = {
			    "~/vim/mapping.vim",
			    "~/vim/option.vim"
			}
<
			Default: nil

		toml		(list of any)
			Specify toml file path and |dein-options|. They are passed
			as arguments to |dein#load_toml()|.
>
			toml = {
			    { "~/vim/dein.toml" },
			    { "~/vim/dein-lazy.toml", { lazy = true } }
			}
<
			Default: nil

		raw		(list of any)
			Specify the repository URI or local repository directory
			path and |dein-options|.
			They are passed as arguments to |dein#add()|
>
			raw = {
			    { "vim-denops/denops.vim" },
			    { "prettier/vim-prettier", { build = "npm install" } },
			    { "~/Projects/VimPlugin/foo.vim" }
			}
<
			Default: nil

		directory	(table)
			It is passed as arguments to |dein#local()|

			path	(string)
				the path to the directory.

			options	(table)
				the options of |dein-options|
				Default: {}

			names	(list of string)
				the directories you want to load
				Default: { "*" }
>
			directory = {
			    path = vim.fn.getcwd(),
			    options = { frozen = 1, merged = 0 },
			    names = { "vim*", "nvim-*" }
			}
<
			Default: nil

		check_install	(boolean)
			if it is true, install not installed plugins on startup.
			This feature is same as: >
				if dein#check_install()
				  call dein#install()
				endif
<
			Default: false

						*dein-snip-config-dein-variables*

Correspondence between |dein-variables| and |dein-snip-config| is:

	dein-variables				dein-snip-config
>
	g:dein#auto_recache			auto_recache
	g:dein#auto_remote_plugins		auto_remote_plugins
	g:dein#cache_directory			cache_directory
	g:dein#default_options			default_options
	g:dein#download_command			download_command
	g:dein#enable_hook_function_cache	enable_hook_function_cache
	g:dein#enable_name_conversion		enable_name_conversion
	g:dein#enable_notification		notification.enable
	g:dein#inline_vimrc			load.vim
	g:dein#install_check_diff		install.check_diff
	g:dein#install_check_remote_threshold	install.check_remote_threshold
	g:dein#install_copy_vim			install.copy_vim
	g:dein#install_github_api_token		install.github_api_token
	g:dein#install_max_processes		install.max_processes
	g:dein#install_process_timeout		install.process_timeout
	g:dein#install_progress_type		install.progress_type
	g:dein#install_message_type		install.message_type
	g:dein#install_log_filename		install.log_filename
	g:dein#lazy_rplugins			lazy_rplugins
	g:dein#name (deprecated)		not support
	g:dein#notification_icon		notification.icon
	g:dein#notification_time		notification.time
	g:dein#plugin				not support
	g:dein#types#git#clone_depth		install.git.clone_depth
	g:dein#types#git#command_path		install.git.command_path
	g:dein#types#git#default_hub_site	install.git.default_hub_site
	g:dein#types#git#default_protocol	install.git.default_protocol
	g:dein#types#git#pull_command		install.git.pull_command
<
==============================================================================
EXAMPLES						*dein-snip-examples*
>
	-- Add dein-snip.lua to runtimepath.
	vim.opt.runtimepath:prepend(vim.fn.expand('~/.cache/dein/repos/github.com/ryota2357/dein-snip.lua'))

	require('dein-snip').setup {
	    load = {
	        vim = {
	            '~/dotfiles/vim/rc/option.rc.vim',
	            '~/dotfiles/vim/rc/maping.rc.vim'
	        },
	        toml = {
	            { '~/dotfiles/vim/rc/dein.toml' },
	            { '~/dotfiles/vim/rc/dein-lazy.toml', { lazy = true } }
	        },
	        raw = {
	            { 'vim-jp/vimdoc-ja', { hook_add = 'set helplang=ja,en' } }
	        },
	        check_install = true
	    },
	    notification = {
	        enable = true,
	        time = 3000
	    },
	    auto_recache = true
	}
<
==============================================================================
CHANGELOG						*dein-snip-changelog*

2022.08.14
* Add new key, check_install, to |dein-snip-config-load|.

2022.08.04
* Create plugin.

vim:tw=78:ts=8:ft=help:norl:noet:fen:noet:
